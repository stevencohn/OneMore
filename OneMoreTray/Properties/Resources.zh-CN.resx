<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="AppName" xml:space="preserve">
    <value>OneMoreTray</value>
    <comment>SKIP</comment>
  </data>
  <data name="BadArguments" xml:space="preserve">
    <value>OneMoreTray 未正确启动，现在将关闭</value>
  </data>
  <data name="BadArgumentsTitle" xml:space="preserve">
    <value>缺少时间表</value>
  <comment></comment></data>
  <data name="CloseConfirm" xml:space="preserve">
    <value>您确定要关闭托盘应用程序吗？</value>
  </data>
  <data name="phrase_Scanning" xml:space="preserve">
    <value>扫描...</value>
  </data>
  <data name="Reschedule_Rebuild" xml:space="preserve">
    <value>目录重建计划于 {0}进行。在 OneMore Tray 应构建目录时选择以下选项。</value>
    <comment>message box intro label</comment>
  </data>
  <data name="Reschedule_Scan" xml:space="preserve">
    <value>计划于 {0} 扫描新主题标签。在 OneMore Tray 应构建目录时选择以下选项。</value>
    <comment>message box intro label</comment>
  </data>
  <data name="RunNowMenuItem" xml:space="preserve">
    <value>现在跑步</value>
  </data>
  <data name="ScanComplete" xml:space="preserve">
    <value>OneMore 标签扫描已完成并可以使用！</value>
  </data>
  <data name="ScanCompleteTitle" xml:space="preserve">
    <value>扫描完成</value>
  </data>
  <data name="ScannerScheduled" xml:space="preserve">
    <value>标签扫描器预定于 {0}进行。这可以通过 OneMore Tray 应用程序进行调整。</value>
  </data>
  <data name="ScannerTitle" xml:space="preserve">
    <value>标签扫描仪</value>
  </data>
  <data name="ScanNowConfirmation" xml:space="preserve">
    <value>扫描可能需要相当长的时间并影响 OneNote 性能。如果在扫描过程中 OneNote 关闭，则在扫描完成之前无法重新打开它。

取消预定时间并立即运行扫描吗？</value>
    <comment> message box</comment>
  </data>
  <data name="ScanRunning" xml:space="preserve">
    <value>当前正在运行扫描</value>
  </data>
  <data name="ScanScheduled" xml:space="preserve">
    <value>扫描计划在{0}上运行</value>
  </data>
  <data name="ScanStarting" xml:space="preserve">
    <value>现在开始扫描...</value>
  </data>
  <data name="ScheduledFor" xml:space="preserve">
    <value>预定于{0}</value>
  </data>
  <data name="ScheduleTimeFormat" xml:space="preserve">
    <value>ddd, MMMM d, yyyy h:mm tt</value>
    <comment>SKIP</comment>
  </data>
  <data name="word_Cancel" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="word_Exit" xml:space="preserve">
    <value>出口</value>
  </data>
  <data name="word_OK" xml:space="preserve">
    <value>好的</value>
  </data>
  <data name="word_Reschedule" xml:space="preserve">
    <value>改期</value>
  </data>
  <data name="Logo" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>Logo.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
</root>